v1
--

- unclick if rclick hover over drawing
- seperate subtool bar to div
- position chart to near front of available data
- prevent rclick on subtoolbar
- rclick on subtool open color wheel

position can be weird, maybe we should force save pos so left bottom most is first point
drawing can crash by clicking around too much


line, and ext line drawings

test when new data is added
  make sure whitespade is supported

more drawings to get a feel of how to further break down drawing class and views
check dispsol of all event handlers (tools, subtools, charts, etc..)

v2
--
multi chart support of same symbol, synced drawings
add text to drawing
allow users to modify styling
sub-tool bar to allow additional customization of drawing 
more drawings!
new context menu when r-clicking a drawing, to allow additional functions
    - change styling (colors, opacity, )
  - text
  - delete / duplicate drawing
rclick to cancel drawing selection / creation
clear all by filter (symbol, group, userid)
support mutiplie charts.  change to one drawing will adjust drawing on all other charts at the same time
  - by symbolName, group, userId
toggle visibility of drawing
decouple toolbar from chart (so you can have a singular toolbar to control all charts)
allow user to define which buttons

v3
--
More styling configuration options
pass in own tool image
maybe expose the tools / subtools  so users can drop them into their own containers
expose toolbar styling


v4
--
allow users to put in custom buttons, that may replicate a certain drawing, but also have callbacks for additional processing
  - user can directly add/edit/remove drawings for a symbol / tag
  - plugin will send back events regarding drawing actions
create api for communication of drawings between user and plugin
more performant saving/loading, different options other than localstorage











